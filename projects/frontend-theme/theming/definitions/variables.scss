@use '@angular/material' as mat;
@use "theme-definition" as theme;

/// A mixin to generate CSS variables for specific theme colors and shades.
/// @param $prefix - The prefix for the generated CSS variable (e.g., "primary", "accent").
/// @param $theme - The Angular Material theme object.
/// @param $shades - An array of color shades to extract (e.g., (50, 100, 200)).
@mixin generateColors($prefix, $theme, $shades) {
    :root {
        @each $shade in $shades {
            $color: mat.get-theme-color($theme, $prefix, $shade);

            @if $color != null {
                --#{$prefix}-#{$shade}: #{$color};
            } @else {
                @warn "Color shade #{$shade} not found for #{$prefix}.";
            }
        }
    }
}

$theme: theme.$theme;

$shades: (0, 10, 20, 25, 30, 35, 40, 50, 60, 70, 80, 90, 95, 98, 99, 100);
$prefixes: ('primary', 'secondary', 'tertiary', 'neutral', 'neutral-variant', 'error');

@each $prefix in $prefixes {
    @include generateColors($prefix, $theme, $shades);
}
